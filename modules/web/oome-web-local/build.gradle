plugins {
    id 'org.oome.common'
    id 'org.oome.common.dependencies'
    id 'org.oome.common.db.dependencies'
    id 'org.oome.swagger.dependencies'
    id 'org.oome.security.dependencies'
}

dependencies {
    rootProject.subprojects.each {
        if (!it.getName().contains("oome-web-local")) {
            println("implementation project :${it.name}")
            implementation project(":${it.name}")
        }
    }
}

def frontendDir = "$projectDir\\..\\..\\..\\frontend"
print(frontendDir)
sourceSets {
    main {
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}

bootRun {
    systemProperty 'spring.profiles.active', 'local'
    systemProperty 'jasypt.encryptor.password', 'oome123!@#'
    systemProperty 'jwt.secret', 'c4b615d236bb9f09f3f2b9fc66a4d439a3b92be4645eacf0920dc96a58247f3141754969d8f0b3de17f8a7f147e8ebe363872a4cda718a00699b0b46b2f86e8'
}

description = 'oome-web-local'